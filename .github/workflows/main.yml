name: Pre-Commit

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  getFiles:
    name: Get example files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
      - name: Build matrix
        id: matrix
        run: |
          FILES=$(python -c "import json; import glob; print(json.dumps([x for x in glob.glob('./**/main.tf', recursive=True)]))")
          echo "::set-output name=files::$FILES"
      - name: View matrix
        run: echo ${{ steps.matrix.outputs.files }}

    outputs:
      files: ${{ steps.matrix.outputs.files }}

  preCommit:
    name: PreCommit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}

      - name: Install Python
        uses: actions/setup-python@v2

      - name: Install pre-commit dependencies
        run: |
          pip install pre-commit
          curl -Lo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz && tar -xzf terraform-docs.tar.gz && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/
          curl -L "$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E "https://.+?_linux_amd64.zip")" > tflint.zip && unzip tflint.zip && rm tflint.zip && sudo mv tflint /usr/bin/

      - name: Execute pre-commit
        run: pre-commit run --color=always --show-diff-on-failure --all-files

  TerraformSecurityScan:
    name: "TerraformSnykScan"
    runs-on: ubuntu-latest
    needs: getFiles
    strategy:
      matrix:
        files: ${{ fromJson(needs.getFiles.outputs.files) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform security scan
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: ${{ matrix.files }}
